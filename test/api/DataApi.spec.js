/**
 * Stellar DataStore
 * The Stellar DataStore service is your instantly available, secure and worry-free cloud data storage service. Sign-up now and minutes later, you can start putting your data in the cloud.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.StellarDataStore);
  }
}(this, function(expect, StellarDataStore) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new StellarDataStore.DataApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DataApi', function() {
    describe('v1DataTableBlobGet', function() {
      it('should call v1DataTableBlobGet successfully', function(done) {
        //uncomment below and update the code to test v1DataTableBlobGet
        //instance.v1DataTableBlobGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1DataTableBlobPost', function() {
      it('should call v1DataTableBlobPost successfully', function(done) {
        //uncomment below and update the code to test v1DataTableBlobPost
        //instance.v1DataTableBlobPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1DataTableClearDelete', function() {
      it('should call v1DataTableClearDelete successfully', function(done) {
        //uncomment below and update the code to test v1DataTableClearDelete
        //instance.v1DataTableClearDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1DataTableDelete', function() {
      it('should call v1DataTableDelete successfully', function(done) {
        //uncomment below and update the code to test v1DataTableDelete
        //instance.v1DataTableDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1DataTableDeletePost', function() {
      it('should call v1DataTableDeletePost successfully', function(done) {
        //uncomment below and update the code to test v1DataTableDeletePost
        //instance.v1DataTableDeletePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1DataTableGet', function() {
      it('should call v1DataTableGet successfully', function(done) {
        //uncomment below and update the code to test v1DataTableGet
        //instance.v1DataTableGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1DataTablePost', function() {
      it('should call v1DataTablePost successfully', function(done) {
        //uncomment below and update the code to test v1DataTablePost
        //instance.v1DataTablePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1DataTablePut', function() {
      it('should call v1DataTablePut successfully', function(done) {
        //uncomment below and update the code to test v1DataTablePut
        //instance.v1DataTablePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
