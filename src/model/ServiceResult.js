/**
 * Stellar DataStore
 * The Stellar DataStore service is your instantly available, secure and worry-free cloud data storage service. Sign-up now and minutes later, you can start putting your data in the cloud.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ServiceMessage from './ServiceMessage';

/**
 * The ServiceResult model module.
 * @module model/ServiceResult
 * @version v1
 */
class ServiceResult {
    /**
     * Constructs a new <code>ServiceResult</code>.
     * @alias module:model/ServiceResult
     */
    constructor() { 
        
        ServiceResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ServiceResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServiceResult} obj Optional instance to populate.
     * @return {module:model/ServiceResult} The populated <code>ServiceResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServiceResult();

            if (data.hasOwnProperty('messages')) {
                obj['messages'] = ApiClient.convertToType(data['messages'], [ServiceMessage]);
            }
            if (data.hasOwnProperty('isSuccess')) {
                obj['isSuccess'] = ApiClient.convertToType(data['isSuccess'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServiceResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServiceResult</code>.
     */
    static validateJSON(data) {
        if (data['messages']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['messages'])) {
                throw new Error("Expected the field `messages` to be an array in the JSON data but got " + data['messages']);
            }
            // validate the optional field `messages` (array)
            for (const item of data['messages']) {
                ServiceMessage.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/ServiceMessage>} messages
 */
ServiceResult.prototype['messages'] = undefined;

/**
 * @member {Boolean} isSuccess
 */
ServiceResult.prototype['isSuccess'] = undefined;






export default ServiceResult;

